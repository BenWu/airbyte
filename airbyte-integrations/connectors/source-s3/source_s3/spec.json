{
  "documentationUrl": "https://docsurl.com",
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Blob Source Spec",
    "type": "object",
    "additionalProperties": false,
    "required": ["dataset_name", "provider", "format", "path"],
    "properties": {
      "dataset_name": {
        "type": "string",
        "description": "Name of the final table (should include only letters, numbers, dash and underscores. Note that this may be altered according to destination.)"
      },
      "provider": {
        "type": "object",
        "description": "Storage Provider or Location of the file(s) to be replicated.",
        "oneOf": [
          {
            "title": "S3: Amazon Web Services",
            "required": ["storage", "bucket"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["S3"],
                "default": "S3"
              },
              "bucket": {
                "type": "string",
                "description": "Name of the S3 bucket where the file(s) exist."
              },
              "aws_access_key_id": {
                "type": ["null", "string"],
                "default": null,
                "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                "airbyte_secret": true
              },
              "aws_secret_access_key": {
                "type": ["null", "string"],
                "default": null,
                "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                "airbyte_secret": true
              },
              "path_prefix": {
                "type": "string",
                "description": "By providing a path-like prefix (e.g. \"myFolder/thisTable/\") to the desired blobs, we can optimise finding these in S3. This is recommended if your bucket contains many folders/files."
              }
            }
          }
        ]
      },
      "format": {
        "type": "object",
        "description": "File Format of the file to be replicated (Warning: some format may be experimental, please refer to docs).",
        "oneOf": [
          {
            "title": "csv",
            "description": "see details <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.read_csv.html#pyarrow-csv-read-csv\" target=\"_blank\">here</a>",
            "required": ["filetype"],
            "properties": {
              "filetype": {
                "type": "string",
                "enum": ["csv"],
                "default": "csv"
              },
              "delimiter": {
                "type": "string",
                "default": ",",
                "description": "leave blank to default to , (comma)"
              },
              "quote_char": {
                "type": "string",
                "default": "\"",
                "description": "leave blank to default to <strong>\"</strong> (double quote)"
              },
              "double_quote": {
                "type": "boolean",
                "default": true,
                "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Leave blank to default to True"
              },
              "escape_char": {
                "type": ["null", "string"],
                "default": null,
                "description": "The character used for escaping special characters. Leave blank to disallow escape character"
              },
              "newlines_in_values": {
                "type": "boolean",
                "default": false,
                "description": "Whether newline characters are allowed in CSV values. Leave blank to default to False",
              },
              "encoding": {
                "type": ["null", "string"],
                "default": null,
                "description": "leave blank to default to <strong>UTF-8</strong> (see <a href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\">list of python encodings</a>)."
              },
              "additional_reader_options": {
                "type": "string",
                "default": "{}",
                "description": "Add a valid JSON string here to provide additional options to the csv reader (see details <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\" target=\"_blank\">here</a>)",
                "examples": ["{\"timestamp_parsers\": [\"%m/%d/%Y %H:%M\", \"%Y/%m/%d %H:%M\"], \"strings_can_be_null\": true, \"null_values\": [\"NA\", \"NULL\"]}"]
              }
            }
          }
        ]
      },
      "path_patterns": {
        "type": "array",
        "description": "list of path patterns, minimum 1 required, TODO: explain how this works in more detail"
      },
      "schema" : {
        "type": "string",
        "default": "{}",
        "description": "TODO: explain how this works. Ensure this is a simple mapping of column:type. Complex types are allowed but will be coerced to String in current implementation. Must use double-quotes!!! (<a href=\"https://json-schema.org/understanding-json-schema/reference/type.html\" target=\"_blank\">JSON Schema</a>)",
        "examples": ["{\"column_1\": \"number\", \"column_2\": \"string\", \"column_3\": \"array\", \"column_4\": \"object\", \"column_5\": \"boolean\"}"]
      }
    }
  }
}
